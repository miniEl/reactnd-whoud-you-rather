{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/ViewQuestion/Unanswered.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button, Form } from 'react-bootstrap';\nimport { answerQuestion } from '../../actions/questions';\n\nclass Unanswered extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: ''\n    };\n\n    this.selectedOption = value => {\n      this.setState({\n        selected: value\n      });\n    };\n\n    this.submitOption = event => {\n      event.preventDefault();\n      const {\n        dispatch,\n        authedUser,\n        question\n      } = this.props;\n      const {\n        selected\n      } = this.state;\n      const qId = question.id;\n      console.log(authedUser);\n      console.log(question);\n      console.log(this.props);\n      dispatch(answerQuestion(authedUser, qustion, \"optionOne\"));\n    };\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Would you rather ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"option\",\n            id: \"optionOne\",\n            label: question.optionOne.text,\n            onChange: () => {\n              this.selectedOption('optionOne');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            name: \"option\",\n            id: \"optionTwo\",\n            label: question.optionTwo.text,\n            onChange: () => {\n              this.selectedOption('optionTwo');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !this.state.selected,\n          onClick: event => this.submitOption(event),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions\n}) => {\n  // console.log('Not Ans');\n  return {\n    authedUser,\n    questions\n  };\n};\n\nexport default connect(mapStateToProps)(Unanswered);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/ViewQuestion/Unanswered.js"],"names":["React","Component","Fragment","connect","Card","Button","Form","answerQuestion","Unanswered","state","selected","selectedOption","value","setState","submitOption","event","preventDefault","dispatch","authedUser","question","props","qId","id","console","log","qustion","render","optionOne","text","optionTwo","mapStateToProps","questions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADyB;;AAAA,SAKjCC,cALiC,GAKfC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAEE;AADE,OAAd;AAGD,KATgC;;AAAA,SAWjCE,YAXiC,GAWjBC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,UAAZ;AAAwBC,QAAAA;AAAxB,UAAqC,KAAKC,KAAhD;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,YAAMY,GAAG,GAAGF,QAAQ,CAACG,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACAH,MAAAA,QAAQ,CAACV,cAAc,CAACW,UAAD,EAAaO,OAAb,EAAsB,WAAtB,CAAf,CAAR;AACD,KArBgC;AAAA;;AAuBjCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,EAAE,EAAC,WAHL;AAIE,YAAA,KAAK,EAAED,QAAQ,CAACQ,SAAT,CAAmBC,IAJ5B;AAKE,YAAA,QAAQ,EAAE,MAAM;AAAE,mBAAKjB,cAAL,CAAoB,WAApB;AAAkC;AALtD;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,EAAE,EAAC,WAHL;AAIE,YAAA,KAAK,EAAEQ,QAAQ,CAACU,SAAT,CAAmBD,IAJ5B;AAKE,YAAA,QAAQ,EAAE,MAAM;AAAE,mBAAKjB,cAAL,CAAoB,WAApB;AAAkC;AALtD;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWC,QAFxB;AAGE,UAAA,OAAO,EAAGK,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAvDgC;;AA0DnC,MAAMe,eAAe,GAAG,CAAC;AAAEZ,EAAAA,UAAF;AAAca,EAAAA;AAAd,CAAD,KAA+B;AACrD;AACA,SAAO;AACLb,IAAAA,UADK;AAELa,IAAAA;AAFK,GAAP;AAID,CAND;;AAQA,eAAe5B,OAAO,CAAC2B,eAAD,CAAP,CAAyBtB,UAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Button, Form } from 'react-bootstrap';\nimport { answerQuestion } from '../../actions/questions';\n\nclass Unanswered extends Component {\n  state = {\n    selected: ''\n  }\n\n  selectedOption = (value) => {\n    this.setState({\n      selected: value\n    });\n  }\n\n  submitOption = (event) => {\n    event.preventDefault();\n\n    const { dispatch, authedUser, question } = this.props;\n    const { selected } = this.state;\n    const qId = question.id;\n    console.log(authedUser);\n    console.log(question);\n    console.log(this.props);\n    dispatch(answerQuestion(authedUser, qustion, \"optionOne\"));\n  }\n\n  render() {\n    const { question } = this.props\n    return (\n      <Fragment>\n        <Card.Title>Would you rather ...</Card.Title>\n        <Form>\n          <Form.Group>\n            <Form.Check\n              type=\"radio\"\n              name=\"option\"\n              id=\"optionOne\"\n              label={question.optionOne.text}\n              onChange={() => { this.selectedOption('optionOne') }}\n            />\n            <Form.Check\n              type=\"radio\"\n              name=\"option\"\n              id=\"optionTwo\"\n              label={question.optionTwo.text}\n              onChange={() => { this.selectedOption('optionTwo') }}\n            />\n          </Form.Group>\n          <Button\n            type=\"submit\"\n            disabled={!this.state.selected}\n            onClick={(event) => this.submitOption(event)}\n          >\n            Submit\n          </Button>\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n  // console.log('Not Ans');\n  return {\n    authedUser,\n    questions,\n  }\n}\n\nexport default connect(mapStateToProps)(Unanswered);"]},"metadata":{},"sourceType":"module"}