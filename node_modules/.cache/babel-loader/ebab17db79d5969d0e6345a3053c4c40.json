{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { Card, Container, Tab, Tabs } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nclass Home extends Component {\n  render() {\n    const {\n      unanswered,\n      answered\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"home-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        expand: \"sm\",\n        className: \"home-card\",\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"unanswered\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventkey: \"unanswered\",\n              title: \"Unanswered Questions\",\n              children: Object.values(unanswered).map(question => {\n                return /*#__PURE__*/_jsxDEV(Question, {\n                  question: question\n                }, question.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventkey: \"answered\",\n              title: \"Answered Questions\",\n              children: Object.values(answered).map(question => {\n                return /*#__PURE__*/_jsxDEV(Question, {\n                  question: question\n                }, question.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapsStateToProps = ({\n  authedUser,\n  questions\n}) => {\n  const questionsList = Object.keys(questions).map(question => {\n    return questions[question];\n  });\n  return {\n    unanswered: questionsList.filter(question => {\n      return !Object.keys(authedUser.answers).includes(question.id);\n    }),\n    answered: questionsList.filter(question => {\n      return Object.keys(authedUser.answers).includes(question.id);\n    })\n  };\n};\n\nexport default connect(mapsStateToProps)(Home);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/Home/Home.js"],"names":["React","Component","Card","Container","Tab","Tabs","connect","Question","Home","render","unanswered","answered","props","Object","values","map","question","id","mapsStateToProps","authedUser","questions","questionsList","keys","filter","answers","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,iBAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC3BQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA2B,KAAKC,KAAtC;AACA,wBACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,IAAb;AAAkB,QAAA,SAAS,EAAC,WAA5B;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,gBAAgB,EAAC,YAAvB;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,QAAQ,EAAC,YAAd;AAA2B,cAAA,KAAK,EAAC,sBAAjC;AAAA,wBACGC,MAAM,CAACC,MAAP,CAAcJ,UAAd,EAA0BK,GAA1B,CAA+BC,QAAD,IAAc;AAC3C,oCACE,QAAC,QAAD;AAEE,kBAAA,QAAQ,EAAEA;AAFZ,mBACOA,QAAQ,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA,wBADF;AAMD,eAPA;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,GAAD;AAAK,cAAA,QAAQ,EAAC,UAAd;AAAyB,cAAA,KAAK,EAAC,oBAA/B;AAAA,wBACGJ,MAAM,CAACC,MAAP,CAAcH,QAAd,EAAwBI,GAAxB,CAA6BC,QAAD,IAAc;AACzC,oCACE,QAAC,QAAD;AAEE,kBAAA,QAAQ,EAAEA;AAFZ,mBACOA,QAAQ,CAACC,EADhB;AAAA;AAAA;AAAA;AAAA,wBADF;AAMD,eAPA;AADH;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;;AAjC0B;;AAoC7B,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AACtD,QAAMC,aAAa,GAAGR,MAAM,CAACS,IAAP,CAAYF,SAAZ,EAAuBL,GAAvB,CAA4BC,QAAD,IAAc;AAC7D,WAAOI,SAAS,CAACJ,QAAD,CAAhB;AACD,GAFqB,CAAtB;AAGA,SAAO;AACLN,IAAAA,UAAU,EAAEW,aAAa,CAACE,MAAd,CAAsBP,QAAD,IAAc;AAC7C,aAAO,CAACH,MAAM,CAACS,IAAP,CAAYH,UAAU,CAACK,OAAvB,EAAgCC,QAAhC,CAA0CT,QAAQ,CAACC,EAAnD,CAAR;AACD,KAFW,CADP;AAILN,IAAAA,QAAQ,EAAEU,aAAa,CAACE,MAAd,CAAsBP,QAAD,IAAc;AAC3C,aAAOH,MAAM,CAACS,IAAP,CAAYH,UAAU,CAACK,OAAvB,EAAgCC,QAAhC,CAA0CT,QAAQ,CAACC,EAAnD,CAAP;AACD,KAFS;AAJL,GAAP;AASD,CAbD;;AAeA,eAAeX,OAAO,CAACY,gBAAD,CAAP,CAA0BV,IAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Container, Tab, Tabs } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Question from './Question';\n\nclass Home extends Component {\n  render() {\n    const { unanswered, answered } = this.props;\n    return (\n      <Container className=\"home-container\">\n        <Card expand=\"sm\" className=\"home-card\">\n          <Card.Header>\n            <Tabs defaultActiveKey=\"unanswered\">\n              <Tab eventkey=\"unanswered\" title=\"Unanswered Questions\">\n                {Object.values(unanswered).map((question) => {\n                  return (\n                    <Question\n                      key={question.id}\n                      question={question}\n                    />\n                  );\n                })}\n              </Tab>\n              <Tab eventkey=\"answered\" title=\"Answered Questions\">\n                {Object.values(answered).map((question) => {\n                  return (\n                    <Question\n                      key={question.id}\n                      question={question}\n                    />\n                  );\n                })}\n              </Tab>\n            </Tabs>\n          </Card.Header>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nconst mapsStateToProps = ({ authedUser, questions }) => {\n  const questionsList = Object.keys(questions).map((question) => {\n    return questions[question];\n  })\n  return {\n    unanswered: questionsList.filter((question) => {\n      return !Object.keys(authedUser.answers).includes((question.id));\n    }),\n    answered: questionsList.filter((question) => {\n      return Object.keys(authedUser.answers).includes((question.id));\n    })\n\n  }\n}\n\nexport default connect(mapsStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}