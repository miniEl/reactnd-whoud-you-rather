{"ast":null,"code":"import { getUsers, getQuestions, saveQuestion, saveQuestionAnswer } from '../utils/api';\nimport { recieveUsers } from './users';\nimport { answerQuestion, newQuestion, recieveQuestions } from './questions';\nimport { userQuestion, userAnswer } from './authedUser';\nexport function handleInitialData() {\n  return dispatch => {\n    return getUsers().then(users => {\n      dispatch(recieveUsers(users));\n    }), getQuestions().then(questions => {\n      dispatch(recieveQuestions(questions));\n    });\n  };\n}\nexport function handleSaveAnswer(authedUser, qId, answer) {\n  return dispatch => {\n    return saveQuestionAnswer({\n      authedUser,\n      qId,\n      answer\n    }).then(() => {\n      dispatch(userAnswer(authedUser, qId, answer));\n      dispatch(addUserAnswer(authedUser, qId, answer));\n      dispatch(answerQuestion(authedUser, qId, answer));\n    });\n  };\n}\nexport function handleSaveQuestion(question) {\n  return dispatch => {\n    return saveQuestion(question).then(que => {\n      dispatch(newQuestion(que));\n      dispatch(addUserQuestion(que.auther, que.id));\n      dispatch(userQuestion(que.id));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/actions/shared.js"],"names":["getUsers","getQuestions","saveQuestion","saveQuestionAnswer","recieveUsers","answerQuestion","newQuestion","recieveQuestions","userQuestion","userAnswer","handleInitialData","dispatch","then","users","questions","handleSaveAnswer","authedUser","qId","answer","addUserAnswer","handleSaveQuestion","question","que","addUserQuestion","auther","id"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,EAA+CC,kBAA/C,QAAyE,cAAzE;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,gBAAtC,QAA8D,aAA9D;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,cAAzC;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAChC,SAAQC,QAAD,IAAc;AACjB,WACIX,QAAQ,GAAGY,IAAX,CAAiBC,KAAD,IAAW;AACvBF,MAAAA,QAAQ,CAACP,YAAY,CAACS,KAAD,CAAb,CAAR;AACH,KAFD,GAGAZ,YAAY,GAAGW,IAAf,CAAqBE,SAAD,IAAe;AAC/BH,MAAAA,QAAQ,CAACJ,gBAAgB,CAACO,SAAD,CAAjB,CAAR;AACH,KAFD,CAJJ;AAQH,GATD;AAUH;AAED,OAAO,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,GAAtC,EAA2CC,MAA3C,EAAmD;AACtD,SAAQP,QAAD,IAAc;AACjB,WAAOR,kBAAkB,CAAC;AAAEa,MAAAA,UAAF;AAAcC,MAAAA,GAAd;AAAmBC,MAAAA;AAAnB,KAAD,CAAlB,CAAgDN,IAAhD,CAAqD,MAAM;AAC9DD,MAAAA,QAAQ,CAACF,UAAU,CAACO,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAX,CAAR;AACAP,MAAAA,QAAQ,CAACQ,aAAa,CAACH,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAd,CAAR;AACAP,MAAAA,QAAQ,CAACN,cAAc,CAACW,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAf,CAAR;AAEH,KALM,CAAP;AAMH,GAPD;AAQH;AAED,OAAO,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACzC,SAAQV,QAAD,IAAc;AACjB,WAAOT,YAAY,CAACmB,QAAD,CAAZ,CAAuBT,IAAvB,CAA6BU,GAAD,IAAS;AACxCX,MAAAA,QAAQ,CAACL,WAAW,CAACgB,GAAD,CAAZ,CAAR;AACAX,MAAAA,QAAQ,CAACY,eAAe,CAACD,GAAG,CAACE,MAAL,EAAaF,GAAG,CAACG,EAAjB,CAAhB,CAAR;AACAd,MAAAA,QAAQ,CAACH,YAAY,CAACc,GAAG,CAACG,EAAL,CAAb,CAAR;AACH,KAJM,CAAP;AAKH,GAND;AAOH","sourcesContent":["import { getUsers, getQuestions, saveQuestion, saveQuestionAnswer } from '../utils/api';\nimport { recieveUsers } from './users';\nimport { answerQuestion, newQuestion, recieveQuestions } from './questions';\nimport { userQuestion, userAnswer } from './authedUser';\n\nexport function handleInitialData() {\n    return (dispatch) => {\n        return (\n            getUsers().then((users) => {\n                dispatch(recieveUsers(users));\n            }),\n            getQuestions().then((questions) => {\n                dispatch(recieveQuestions(questions));\n            })\n        )\n    }\n}\n\nexport function handleSaveAnswer(authedUser, qId, answer) {\n    return (dispatch) => {\n        return saveQuestionAnswer({ authedUser, qId, answer }).then(() => {\n            dispatch(userAnswer(authedUser, qId, answer));\n            dispatch(addUserAnswer(authedUser, qId, answer));\n            dispatch(answerQuestion(authedUser, qId, answer));\n\n        })\n    }\n}\n\nexport function handleSaveQuestion(question) {\n    return (dispatch) => {\n        return saveQuestion(question).then((que) => {\n            dispatch(newQuestion(que));\n            dispatch(addUserQuestion(que.auther, que.id));\n            dispatch(userQuestion(que.id));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}