{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/NewQuestion/NewQuestion.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Container, Form } from 'react-bootstrap';\nimport { handleSaveQuestion } from '../../actions/shared';\nimport './NewQuestion.css';\nimport { Redirect } from 'react-router-dom';\n\nclass NewQuestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      optionOne: '',\n      optionTwo: '',\n      home: false\n    };\n\n    this.addOptionOne = value => {\n      this.setState({\n        optionOne: value.trim()\n      });\n    };\n\n    this.addOptionTwo = value => {\n      this.setState({\n        optionTwo: value.trim()\n      });\n    };\n\n    this.submitQuestion = event => {\n      event.preventDefault();\n      const {\n        optionOne,\n        optionTwo\n      } = this.state;\n      const {\n        authedUser,\n        dispatch\n      } = this.props;\n      const author = authedUser.id;\n      const optionOneText = optionOne;\n      const optionTwoText = optionTwo;\n      dispatch(handleSaveQuestion({\n        author,\n        optionOneText,\n        optionTwoText\n      }));\n      this.setState(() => ({\n        home: true\n      }));\n    };\n  }\n\n  render() {\n    const {\n      optionOne,\n      optionTwo,\n      home\n    } = this.state;\n    if (home) // Check if question is already added and redirect user to home\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        push: true,\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"new-que-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        expand: \"sm\",\n        className: \"new-que-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"primary-text\",\n            children: \"Create New Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Would you rather ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Option One\",\n                onChange: event => this.addOptionOne(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Option Two\",\n                onChange: event => this.addOptionTwo(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: event => this.submitQuestion(event),\n              disabled: optionOne === '' || optionTwo === '',\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions\n}) => {\n  return {\n    authedUser\n  };\n};\n\nexport default connect(mapStateToProps)(NewQuestion);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/NewQuestion/NewQuestion.js"],"names":["React","Component","connect","Button","Card","Container","Form","handleSaveQuestion","Redirect","NewQuestion","state","optionOne","optionTwo","home","addOptionOne","value","setState","trim","addOptionTwo","submitQuestion","event","preventDefault","authedUser","dispatch","props","author","id","optionOneText","optionTwoText","render","target","mapStateToProps","questions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, Container, Form } from 'react-bootstrap';\nimport { handleSaveQuestion } from '../../actions/shared';\nimport './NewQuestion.css';\nimport { Redirect } from 'react-router-dom';\n\nclass NewQuestion extends Component {\n  state = {\n    optionOne: '',\n    optionTwo: '',\n    home: false\n  }\n\n  addOptionOne = (value) => {\n    this.setState({\n      optionOne: value.trim()\n    });\n  };\n  addOptionTwo = (value) => {\n    this.setState({\n      optionTwo: value.trim()\n    });\n  };\n\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    const { optionOne, optionTwo } = this.state;\n    const { authedUser, dispatch } = this.props;\n    const author = authedUser.id;\n    const optionOneText = optionOne;\n    const optionTwoText = optionTwo;\n    dispatch(handleSaveQuestion({ author, optionOneText, optionTwoText }));\n\n    this.setState(() => ({\n      home: true\n    }));\n  }\n\n  render() {\n    const { optionOne, optionTwo, home } = this.state;\n    if (home) // Check if question is already added and redirect user to home\n      return <Redirect push to='/home' />\n    return (\n      <Container className=\"new-que-container\">\n        <Card expand=\"sm\" className=\"new-que-card\">\n          <Card.Header>\n            <Card.Title className=\"primary-text\">Create New Question</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Card.Title>Would you rather ...</Card.Title>\n            <Form>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Option One\"\n                  onChange={(event) => this.addOptionOne(event.target.value)}\n                />\n              </Form.Group>\n              <Card.Text>OR</Card.Text>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Option Two\"\n                  onChange={(event) => this.addOptionTwo(event.target.value)}\n                />\n              </Form.Group>\n              <Button\n                type=\"submit\"\n                onClick={(event) => this.submitQuestion(event)}\n                disabled={optionOne === '' || optionTwo === ''}\n              >Submit</Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n  return {\n    authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(NewQuestion);"]},"metadata":{},"sourceType":"module"}