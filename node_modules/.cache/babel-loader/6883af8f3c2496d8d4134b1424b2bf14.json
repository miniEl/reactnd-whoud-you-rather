{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { handleInitialData } from '../actions/shared';\nimport { BrowserRouter as Router, Redirect, Route, useParams } from 'react-router-dom';\nimport AppNav from './AppNav/AppNav';\nimport Login from './Login/Login';\nimport Home from './Home/Home';\nimport Leaderboard from './Leaderboard/Leaderboard';\nimport NewQuestion from './NewQuestion/NewQuestion';\nimport ViewQuestion from './ViewQuestion/ViewQuestion';\nimport NotFound from './NotFound';\nimport Switch from 'react-bootstrap/esm/Switch';\n\nclass App extends Component {\n  // state = {\n  //   is404: false\n  // }\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n\n  render() {\n    const {\n      authedUser\n    } = this.props;\n    console.log(this.props);\n    const val = useParams();\n    console.log(val);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: !authedUser ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AppNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            extact: true,\n            path: \"/home\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            extact: true,\n            path: \"/questions/:id\",\n            component: ViewQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            extact: true,\n            path: \"/add/\",\n            component: NewQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            extact: true,\n            path: \"/leaderboard\",\n            component: Leaderboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this) // is404 ? <Route component={NotFound} />\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions\n}) => {\n  return {\n    authedUser\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/App.js"],"names":["React","Component","Fragment","connect","handleInitialData","BrowserRouter","Router","Redirect","Route","useParams","AppNav","Login","Home","Leaderboard","NewQuestion","ViewQuestion","NotFound","Switch","App","componentDidMount","props","dispatch","render","authedUser","console","log","val","mapStateToProps","questions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmDC,SAAnD,QAAoE,kBAApE;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAC1B;AACA;AACA;AAEAkB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoBjB,iBAAiB,EAArC;AACD;;AACDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKH,KAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,UAAMM,GAAG,GAAGjB,SAAS,EAArB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,wBACE,QAAC,QAAD;AAAA,gBAEI,CAACH,UAAD,gBACE,QAAC,QAAD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEZ;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,gBAME,QAAC,QAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,MAAM,MAAb;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,MAAM,MAAb;AAAc,YAAA,IAAI,EAAC,gBAAnB;AAAoC,YAAA,SAAS,EAAEG;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,MAAM,MAAb;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,SAAS,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,KAAD;AAAO,YAAA,MAAM,MAAb;AAAc,YAAA,IAAI,EAAC,cAAnB;AAAkC,YAAA,SAAS,EAAED;AAA7C;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARN,CAmBI;;AAnBJ;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AArCyB;;AAwC5B,MAAMc,eAAe,GAAG,CAAC;AAAEJ,EAAAA,UAAF;AAAcK,EAAAA;AAAd,CAAD,KAA+B;AACrD,SAAO;AACLL,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAACwB,eAAD,CAAP,CAAyBT,GAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { handleInitialData } from '../actions/shared';\nimport { BrowserRouter as Router, Redirect, Route, useParams } from 'react-router-dom';\nimport AppNav from './AppNav/AppNav';\nimport Login from './Login/Login';\nimport Home from './Home/Home';\nimport Leaderboard from './Leaderboard/Leaderboard';\nimport NewQuestion from './NewQuestion/NewQuestion';\nimport ViewQuestion from './ViewQuestion/ViewQuestion';\nimport NotFound from './NotFound';\nimport Switch from 'react-bootstrap/esm/Switch';\n\nclass App extends Component {\n  // state = {\n  //   is404: false\n  // }\n\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n  render() {\n    const { authedUser } = this.props;\n    console.log(this.props);\n    const val = useParams();\n    console.log(val);\n    return (\n      <Fragment>\n        {\n          !authedUser ?\n            <Fragment>\n              <Redirect to=\"/login\" />\n              <Route exact path=\"/login\" component={Login} />\n            </Fragment>\n            :\n            <Fragment>\n              <AppNav />\n              <Switch>\n                <Redirect to=\"/home\" />\n                <Route extact path=\"/home\" component={Home} />\n                <Route extact path=\"/questions/:id\" component={ViewQuestion} />\n                <Route extact path=\"/add/\" component={NewQuestion} />\n                <Route extact path=\"/leaderboard\" component={Leaderboard} />\n              </Switch>\n            </Fragment>\n\n          // is404 ? <Route component={NotFound} />\n        }\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, questions }) => {\n  return {\n    authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}