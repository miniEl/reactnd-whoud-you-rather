{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedUser: ''\n    };\n\n    this.handleSelectedUser = user => {\n      this.setState({\n        selectedUser: user\n      });\n    };\n  }\n\n  render() {\n    const {\n      users,\n      authenticate\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        expand: \"sm\",\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"primary-text\",\n            children: \" Would You Rather! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"primary-text\",\n            children: \" Please sign in to play \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 86\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n              variant: \"light\",\n              id: \"dropdown-basic-button\",\n              title: !this.state.selectedUser ? \"select a user\" : users[this.state.selectedUser].name,\n              children: [\" \", users && Object.keys(users).map(user => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onSelect: () => this.handleSelectedUser(user),\n                value: user,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"avatar\",\n                  src: \"../../assets/images/\" + users[user].avatarURL,\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this), \" \", users[user].name, \" \"]\n              }, user, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 50\n              }, this)), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !this.state.selectedUser,\n            onClick: () => authenticate(users[this.state.selectedUser]),\n            type: \"submit\",\n            value: \"submit\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 24\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 27\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  users\n}) => {\n  return {\n    users,\n    loading: Object.entries(users).length === 0 && users.constructor === Object\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticate: user => {\n      dispatch(setAuthedUser(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/Login/Login.js"],"names":["React","Component","connect","Container","Card","Dropdown","DropdownButton","Button","setAuthedUser","Login","state","selectedUser","handleSelectedUser","user","setState","render","users","authenticate","props","name","Object","keys","map","avatarURL","mapStateToProps","loading","entries","length","constructor","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport './Login.css';\n\nclass Login extends Component {\n    state = {\n        selectedUser: ''\n    }\n\n    handleSelectedUser = (user) => {\n        this.setState({\n            selectedUser: user\n        })\n    }\n\n    render() {\n        const { users, authenticate } = this.props;\n        return ( <\n            Container className = \"login-container\" >\n            <\n            Card expand = \"sm\"\n            className = \"login-card\" >\n            <\n            Card.Header >\n            <\n            Card.Title className = \"primary-text\" > Would You Rather! < /Card.Title> <\n            Card.Subtitle className = \"primary-text\" > Please sign in to play < /Card.Subtitle> <\n            /Card.Header> <\n            Card.Body >\n            <\n            Dropdown >\n            <\n            DropdownButton variant = \"light\"\n            id = \"dropdown-basic-button\"\n            title = {!this.state.selectedUser ?\n                \"select a user\" : users[this.state.selectedUser].name\n            } > {\n                users &&\n                Object.keys(users).map(user => ( <\n                    Dropdown.Item onSelect = {\n                        () => this.handleSelectedUser(user) }\n                    key = { user }\n                    value = { user } >\n                    <\n                    img className = \"avatar\"\n                    src = { \"../../assets/images/\" + users[user].avatarURL }\n                    alt = \"avatar\" / > { users[user].name } <\n                    /Dropdown.Item>\n                ))\n            } <\n            /DropdownButton> <\n            /Dropdown> <\n            Button disabled = {!this.state.selectedUser }\n            onClick = {\n                () => authenticate(users[this.state.selectedUser]) }\n            type = \"submit\"\n            value = \"submit\" >\n            Sign in\n            <\n            /Button> <\n            /Card.Body> <\n            /Card> <\n            /Container>\n        );\n    }\n}\n\nconst mapStateToProps = ({ users }) => {\n    return {\n        users,\n        loading: Object.entries(users).length === 0 && users.constructor === Object\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        authenticate: (user) => {\n            dispatch(setAuthedUser(user))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}