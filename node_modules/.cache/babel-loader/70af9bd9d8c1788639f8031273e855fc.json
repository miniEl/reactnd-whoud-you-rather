{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/ViewQuestion/ViewQuestion.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Container, Image, Nav } from 'react-bootstrap';\nimport Unanswered from './Unanswered';\nimport Answered from './Answered';\nimport NotFound from '../NotFound';\nimport './ViewQuestion.css';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass ViewQuestion extends Component {\n  render() {\n    const {\n      users,\n      question\n    } = this.props;\n\n    if (!question) {\n      // return <NotFound />;\n      return /*#__PURE__*/_jsxDEV(Nav, {\n        activeKey: window.location.pathname,\n        children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n          to: \"/404\",\n          children: /*#__PURE__*/_jsxDEV(NotFound, {\n            eventKey: \"404\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"view-que-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        expand: \"sm\",\n        className: \"que-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"primary-text\",\n            children: [users[question.author].name, !this.props.answered ? ' asks:' : ' asked:']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"que-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"avatar\",\n              src: \"../../assets/images/\" + users[question.author].avatarURL,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: !this.props.answered ? /*#__PURE__*/_jsxDEV(Unanswered, {\n              question: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Answered, {\n              question: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  users,\n  questions\n}, props) => {\n  const id = props.match.params.id;\n  return {\n    users,\n    question: questions[id],\n    answered: authedUser.answers[id]\n  };\n};\n\nexport default connect(mapStateToProps)(ViewQuestion);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/ViewQuestion/ViewQuestion.js"],"names":["React","Component","connect","Card","Container","Image","Nav","Unanswered","Answered","NotFound","LinkContainer","ViewQuestion","render","users","question","props","window","location","pathname","author","name","answered","avatarURL","mapStateToProps","authedUser","questions","id","match","params","answers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, Container, Image, Nav } from 'react-bootstrap';\nimport Unanswered from './Unanswered';\nimport Answered from './Answered';\nimport NotFound from '../NotFound';\nimport './ViewQuestion.css';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass ViewQuestion extends Component {\n  render() {\n    const { users, question } = this.props;\n\n    if (!question) {\n      // return <NotFound />;\n      return (\n        <Nav activeKey={window.location.pathname}>\n          <LinkContainer to=\"/404\">\n            {/* <Nav.Link >Home</Nav.Link> */}\n            <NotFound eventKey=\"404\" />\n          </LinkContainer>\n        </Nav>\n      )\n    }\n\n    return (\n      <Container className=\"view-que-container\">\n        <Card expand=\"sm\" className=\"que-card\">\n          <Card.Header>\n            <Card.Title className=\"primary-text\">\n              {users[question.author].name}\n              {\n                !this.props.answered ?\n                  ' asks:' :\n                  ' asked:'\n              }\n            </Card.Title>\n          </Card.Header>\n          <Card.Body className=\"que-card-body\">\n            <div className=\"avatar-wrapper\">\n              <Image\n                className=\"avatar\"\n                src={\"../../assets/images/\" + users[question.author].avatarURL}\n                alt=\"avatar\" />\n            </div>\n            <div className=\"divider\"></div>\n            <div className=\"content-wrapper\">\n              {\n                !this.props.answered ?\n                  <Unanswered question={question} /> :\n                  <Answered question={question} />\n              }\n            </div>\n\n          </Card.Body>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authedUser, users, questions }, props) => {\n  const id = props.match.params.id;\n  return {\n    users,\n    question: questions[id],\n    answered: authedUser.answers[id]\n  }\n}\n\nexport default connect(mapStateToProps)(ViewQuestion);"]},"metadata":{},"sourceType":"module"}