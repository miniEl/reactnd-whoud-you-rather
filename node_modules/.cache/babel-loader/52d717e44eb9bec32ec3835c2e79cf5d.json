{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/ViewQuestion/Answered.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, ProgressBar } from 'react-bootstrap';\n\nclass Answered extends Component {\n  render() {\n    const {\n      question,\n      options,\n      selected,\n      totalVotes\n    } = this.props;\n    console.log('Answered::'); // console.log(question.optionOne.votes);\n    // console.log(question.optionTwo.votes);\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-container\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          children: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 40,\n          label: \"40%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [option.votes.length, \" of \", totalVotes, \" votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)]\n      }, option.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser\n}, {\n  question\n}) => {\n  console.log('log::');\n  console.log(question);\n  console.log(question.optionOne.votes.length);\n  console.log(question.optionTwo.votes.length);\n  return {\n    question,\n    options: [question.optionOne, question.optionTwo],\n    selected: authedUser.answers[question.id],\n    totalVotes: question.optionOne.votes.length + question.optionTwo.votes.length\n  };\n};\n\nexport default connect(mapStateToProps)(Answered);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/ViewQuestion/Answered.js"],"names":["React","Component","Fragment","connect","Card","ProgressBar","Answered","render","question","options","selected","totalVotes","props","console","log","map","option","text","votes","length","mapStateToProps","authedUser","optionOne","optionTwo","answers","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,iBAAlC;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,QAA8C,KAAKC,KAAzD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAFO,CAGP;AACA;;AACA,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIL,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACV;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE,QAAC,IAAD,CAAM,QAAN;AAAA,oBAAgBA,MAAM,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,EAAlB;AAAsB,UAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,qBAAYD,MAAM,CAACE,KAAP,CAAaC,MAAzB,UAAqCR,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAoCK,MAAM,CAACC,IAA3C;AAAA;AAAA;AAAA;AAAA,cADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AApB8B;;AAuBjC,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAiB;AAAEb,EAAAA;AAAF,CAAjB,KAAkC;AACxDK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACc,SAAT,CAAmBJ,KAAnB,CAAyBC,MAArC;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACe,SAAT,CAAmBL,KAAnB,CAAyBC,MAArC;AAEA,SAAO;AACLX,IAAAA,QADK;AAELC,IAAAA,OAAO,EAAE,CAACD,QAAQ,CAACc,SAAV,EAAqBd,QAAQ,CAACe,SAA9B,CAFJ;AAGLb,IAAAA,QAAQ,EAAEW,UAAU,CAACG,OAAX,CAAmBhB,QAAQ,CAACiB,EAA5B,CAHL;AAILd,IAAAA,UAAU,EAAEH,QAAQ,CAACc,SAAT,CAAmBJ,KAAnB,CAAyBC,MAAzB,GAAkCX,QAAQ,CAACe,SAAT,CAAmBL,KAAnB,CAAyBC;AAJlE,GAAP;AAMD,CAZD;;AAcA,eAAehB,OAAO,CAACiB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, ProgressBar } from 'react-bootstrap';\n\nclass Answered extends Component {\n  render() {\n    const { question, options, selected, totalVotes } = this.props\n    console.log('Answered::');\n    // console.log(question.optionOne.votes);\n    // console.log(question.optionTwo.votes);\n    return (\n      <Fragment>\n        <Card.Title>Results:</Card.Title>\n        {\n          options.map((option) => (\n            <div className=\"box-container\" key={option.text}>\n              <Card.Subtitle>{option.text}</Card.Subtitle>\n              <ProgressBar now={40} label='40%' />\n              <Card.Text>{option.votes.length} of {totalVotes} votes</Card.Text>\n            </div>\n          ))\n        }\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({ authedUser }, { question }) => {\n  console.log('log::');\n  console.log(question);\n  console.log(question.optionOne.votes.length);\n  console.log(question.optionTwo.votes.length);\n\n  return {\n    question,\n    options: [question.optionOne, question.optionTwo],\n    selected: authedUser.answers[question.id],\n    totalVotes: question.optionOne.votes.length + question.optionTwo.votes.length\n  }\n}\n\nexport default connect(mapStateToProps)(Answered);"]},"metadata":{},"sourceType":"module"}