{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/Leaderboard/Leaderboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Card, Container, Image } from 'react-bootstrap';\nimport './Leaderboard.css';\n\nclass Leaderboard extends Component {\n  render() {\n    const {\n      users\n    } = this.props;\n    console.log(users);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"user-card-container\",\n      children: users.map(user => (console.log(user.answers), /*#__PURE__*/_jsxDEV(Card, {\n        expand: \"sm\",\n        className: \"user-card\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"user-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"avatar\",\n              src: \"../../assets/images/\" + user.avatarURL,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"primary-text\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Answered questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.answers.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 61\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Created questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 60\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"score\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-score\",\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: \"7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  users\n}) => {\n  return {\n    users: Object.values(users)\n  };\n};\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Users/merhanelkheshen/Documents/MyStudy/react/react-nanodegree/would-you-rather(git)/reactnd-whout-you-rather/src/components/Leaderboard/Leaderboard.js"],"names":["React","Component","connect","Badge","Card","Container","Image","Leaderboard","render","users","props","console","log","map","user","answers","avatarURL","name","length","id","mapStateToProps","Object","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Badge, Card, Container, Image } from 'react-bootstrap';\nimport './Leaderboard.css';\n\nclass Leaderboard extends Component {\n  render() {\n    const { users } = this.props;\n    console.log(users);\n    return (\n      <Container className=\"user-card-container\">\n        {\n          users.map((user) => (\n            console.log(user.answers),\n            <Card expand=\"sm\" className=\"user-card\" key={user.id}>\n              <Card.Body className=\"user-card-body\">\n                <div className=\"avatar-wrapper\">\n                  <Image className=\"avatar\" src={\"../../assets/images/\" + user.avatarURL} alt=\"avatar\" />\n                </div>\n                <div className=\"divider\"></div>\n                <div className=\"content-wrapper\">\n                  <Card.Title className=\"primary-text\">{user.name}</Card.Title>\n                  <Card.Text><span>Answered questions</span><span>{user.answers.length}</span></Card.Text>\n                  <Card.Text><span>Created questions</span><span>2</span></Card.Text>\n                </div>\n                <div className=\"divider\"></div>\n                <Card className=\"score\">\n                  <Card.Header>\n                    <Card.Title>Score</Card.Title>\n                  </Card.Header>\n                  <Card.Body>\n                    <div className=\"total-score\">\n                      <Card.Text>7</Card.Text>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Card.Body>\n            </Card>\n          ))\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ users }) => {\n  return {\n    users: Object.values(users),\n  }\n}\n\nexport default connect(mapStateToProps)(Leaderboard);"]},"metadata":{},"sourceType":"module"}